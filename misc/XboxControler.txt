-------
Startup
-------
#include <xinput.h>

// NOTE(casey): XInputGetState
#define X_INPUT_GET_STATE(name) DWORD WINAPI name(DWORD dwUserIndex, XINPUT_STATE *pState)
typedef X_INPUT_GET_STATE(x_input_get_state);

X_INPUT_GET_STATE(XInputGetStateStub)
{
    return(0);
}
global_veriable x_input_get_state *XInputGetState_ = XInputGetStateStub;
#define XInputGetState XInputGetState_

// NOTE(casey): XInputSetState
#define X_INPUT_SET_STATE(name) DWORD WINAPI name(DWORD dwUserIndex, XINPUT_VIBRATION *pVibration)
typedef X_INPUT_SET_STATE(x_input_set_state);
X_INPUT_SET_STATE(XInputSetStateStub)
{
    return(0);
}
global_veriable x_input_set_state *XInputSetState_ = XInputSetStateStub;
#define XInputSetState XInputSetState_

internal void
Win32LoadXInput(void)
{
    HMODULE XInputLibrary = LoadLibrary("xinput1_4.dll");
    if(XInputLibrary)
    {
        XInputGetState = (x_input_get_state *)GetProcAddress(XInputLibrary, "XInputGetState");
        XInputSetState = (x_input_set_state *)GetProcAddress(XInputLibrary, "XInputSetState");
    }
}

-------
Winmain
-------
{
    Win32LoadXInput(); // FunctionCall
---------------------
    In Running Loop
---------------------

    // TODO(casey): Should we poll this more frequently
    for(DWORD ControllerIndex = 0;
    ControllerIndex < XUSER_MAX_COUNT;
    ++ControllerIndex)
    {

        XINPUT_STATE ControllerState;
        if(XInputGetState(ControllerIndex, &ControllerState) == ERROR_SUCCESS)
        {
            // NOTE(casey): This controller is plugged in
            // TODO(casey): See if ControllerState.dwPacketNumber increments too rapidly

            XINPUT_GAMEPAD *Pad = &ControllerState.Gamepad;

            bool Up = (Pad->wButtons & XINPUT_GAMEPAD_DPAD_UP);
            bool Down = (Pad->wButtons & XINPUT_GAMEPAD_DPAD_DOWN);
            bool Right = (Pad->wButtons & XINPUT_GAMEPAD_DPAD_LEFT);
            bool Left = (Pad->wButtons & XINPUT_GAMEPAD_DPAD_RIGHT);
            bool Start = (Pad->wButtons & XINPUT_GAMEPAD_START);
            bool Back = (Pad->wButtons & XINPUT_GAMEPAD_BACK);
            bool LeftShoulder = (Pad->wButtons & XINPUT_GAMEPAD_LEFT_SHOULDER);
            bool RightShoulder = (Pad->wButtons & XINPUT_GAMEPAD_RIGHT_SHOULDER);
            bool AButton = (Pad->wButtons & XINPUT_GAMEPAD_A);
            bool BButton = (Pad->wButtons & XINPUT_GAMEPAD_B);
            bool XButton = (Pad->wButtons & XINPUT_GAMEPAD_X);
            bool YButton = (Pad->wButtons & XINPUT_GAMEPAD_Y);

            int16 StickX = Pad->sThumbLX;
            int16 StickY = Pad->sThumbLY;

-----------------------
            For example 
-----------------------
            if(AButton)
            {
                OutputDebugStringA("Button pressed");
            }
            else
            {
                // NOTE(casey): The controller is not available
            }  
        }

    }

    XINPUT_VIBRATION Vibration;
    Vibration.wLeftMotorSpeed = 60000;
    Vibration.wRighttMotorSpeed = 60000;
    XInputSetState(0, &Vibration);
}
